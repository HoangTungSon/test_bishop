package com.company.exercise2;

public class Node {
  // (x, y) represents chess board coordinates
  // dist represent its minimum distance from the source
  int x, y, dist;

  public Node(int x, int y) {
    this.x = x;
    this.y = y;
  }

  public Node(int x, int y, int dist) {
    this.x = x;
    this.y = y;
    this.dist = dist;
  }

  public Node() {

  }

  public int getX() {
    return x;
  }

  public void setX(int x) {
    this.x = x;
  }

  public int getY() {
    return y;
  }

  public void setY(int y) {
    this.y = y;
  }

  public int getDist() {
    return dist;
  }

  public void setDist(int dist) {
    this.dist = dist;
  }

  // As we are using class object as a key in a HashMap
  // we need to implement hashCode() and equals()

  // -- below methods are generated by IntelliJ IDEA (Alt + Insert) --
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;

    Node node = (Node) o;

    if (x != node.x) return false;
    if (y != node.y) return false;
    return dist == node.dist;
  }

  @Override
  public int hashCode() {
    int result = x;
    result = 31 * result + y;
    result = 31 * result + dist;
    return result;
  }

  @Override
  public String toString() {
    return getX() + "/" + getY();
  }
}
